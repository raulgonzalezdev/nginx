version: '3.8'
services:
 
  app:
    build: ../strong-solstice
    container_name: app
    image: astroapp
    #volumes:
     # - /var/www/webapp/strong-solstice:/app
    ports:
      - "4321:4321" #
    environment:
      - HOST=0.0.0.0
    restart: unless-stopped
    networks:
      - webnet

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      #- ./conf.d:/etc/nginx/conf.d
      - /var/www/webapp/nginx/conf.d:/etc/nginx/conf.d 
      - /etc/letsencrypt:/etc/letsencrypt:ro
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    restart: unless-stopped
    networks:
      - webnet

  postgres:
    image: postgres:latest
    container_name: db_postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - webnet

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - webnet    
  
  backend:
    build: ../datqbox-backend
    container_name: datqbox-backend
    image: datqbox-backend
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=ecommerce
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    networks:
      - webnet
  
  
 

  code-server:
    build: ../code
    image: codercom/code-server:latest
    user: "1001:1002" # Reemplaza con tu UID y GID reales
    container_name: code-server
    environment:
      - PASSWORD=ML!gsx90l02 # Establece la contraseña para code-server
    volumes:   
      #- /var/www/webapp/code:/path/inside/containe
      - /var/www/webapp:/home/coder/projectos # Ajusta según tu necesidad
    ports:
      - "8443:8080" # Expone el puerto 8443 del host al puerto 8080 del contenedor
    networks:
      - webnet

  certbot:
    image: certbot/certbot
    container_name: cerbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - nginx
    command: >
      certonly --webroot 
      --webroot-path=/var/www/certbot 
      --email raul.gonzalez@datqbox.com 
      --agree-tos 
      --no-eff-email
      --non-interactive
      --expand 
      --staging
      --break-my-certs  
      -d datqbox.com 
      -d www.datqbox.com 
      -d portafolio.datqbox.com 
      -d code.datqbox.com 
      -d blog.datqbox.com
      -d pos.datqbox.com
      -d app.datqbox.com
      -d crm.datqbox.com
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - webnet

volumes:
  postgres_data:


networks:
  webnet:
    external: true
    driver: bridge

